export declare function Column(typeOrOptions: any, options: any): (object: any, propertyName: any) => void;
export declare function CreateDateColumn(options: any): (object: any, propertyName: any) => void;
export declare function ObjectIdColumn(columnOptions: any): (object: any, propertyName: any) => void;
export declare function ViewColumn(columnOptions: any): (object: any, propertyName: any) => void;
export declare function PrimaryColumn(typeOrOptions: any, options: any): (object: any, propertyName: any) => void;
export declare function PrimaryGeneratedColumn(options: any): (object: any, propertyName: any) => void;
export declare function UpdateDateColumn(options: any): (object: any, propertyName: any) => void;
export declare function VersionColumn(options: any): (object: any, propertyName: any) => void;
export declare function ChildEntity(tableName: any, options: any): (object: any) => void;
export declare function ViewEntity(name: any, options: any): (object: any) => void;
export declare function Entity(name: any, options: any): (object: any) => void;
export declare function TableInheritance(type: any): (object: any) => void;
export declare function AfterInsert(): (object: any, propertyName: any) => void;
export declare function AfterLoad(): (object: any, propertyName: any) => void;
export declare function AfterRemove(): (object: any, propertyName: any) => void;
export declare function AfterUpdate(): (object: any, propertyName: any) => void;
export declare function BeforeInsert(): (object: any, propertyName: any) => void;
export declare function BeforeRemove(): (object: any, propertyName: any) => void;
export declare function BeforeUpdate(): (object: any, propertyName: any) => void;
export declare function EventSubscriber(): (object: any, propertyName: any) => void;
export declare function JoinColumn(options: any): (object: any, propertyName: any) => void;
export declare function JoinTable(options: any): (object: any, propertyName: any) => void;
export declare function ManyToMany(typeFunction: any, inverseSideOrOptions: any, options: any): (object: any, propertyName: any) => void;
export declare function ManyToOne(typeFunction: any, inverseSideOrOptions: any, options: any): (object: any, propertyName: any) => void;
export declare function OneToMany(typeFunction: any, inverseSideOrOptions: any, options: any): (object: any, propertyName: any) => void;
export declare function OneToOne(typeFunction: any, inverseSideOrOptions: any, options: any): (object: any, propertyName: any) => void;
export declare function RelationCount(relation: any): (object: any, propertyName: any) => void;
export declare function RelationId(relation: any): (object: any, propertyName: any) => void;
export declare function Tree(name: any, options: any): (object: any) => void;
export declare function TreeChildren(options: any): (object: any, propertyName: any) => void;
export declare function TreeChildrenCount(options: any): (object: any, propertyName: any) => void;
export declare function TreeLevelColumn(): (object: any, propertyName: any) => void;
export declare function TreeParent(options: any): (object: any, propertyName: any) => void;
export declare function Generated(options: any): (object: any, propertyName: any) => void;
export declare function Index(options: any): (object: any, propertyName: any) => void;
export declare function getConnection(): void;
export declare function Brackets(): void;
export declare function getManager(): void;
export declare function AdvancedConsoleLogger(): void;
export declare function DefaultNamingStrategy(): void;
